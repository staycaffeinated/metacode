#
# WHAT THE FIELDS MEAN
#
# Template paths are resource-path based
# Destination paths are relative to the project.root directory.
# The Context indicates both when the template is used and
# what kind of data is passed to the template 'compiler' to resolve template variables.
# At the moment, 2 kinds of contexts are supported: 'project' and 'endpoint' since,
# from the command-line interface, there are two subcommands, 'create-project'
# and 'create-endpoint'. Hence, templates in the 'project' context are used
# when the 'create-project' command is invoked, and templates in 'endpoint' context
# are used when the 'create-endpoint' command is invoked.
#
# The 'feature' attribute indicates that particular template is only applied
# when the declared feature (i.e., library integration) was specified. For example,
# some templates are only applicable when PostgreSQL support is wanted.  Features
# come into play when the '-s' ('--suport') option is given on the command line.
# For instance, ``rest-api create-project --package org.example --support postgres``
#
catalog:
  - entry:
      template: "/common/README.ftl"
      destination: "README.md"
      context: "project"
  - entry:
      template:  "/docker/DockerCompose.ftl"
      destination: "src/main/docker-compose/docker-compose.yaml"
      context: "project"
  - entry:
      template: "/lombok/lombokConfig.ftl"
      destination: "lombok.config"
      context: "project"
